import streamlit as st
import pandas as pd
import plotly.graph_objects as go
import plotly.express as px
import numpy as np
from vnstock import * #import all functions, including functions that provide OHLC data for charting
from vnstock.chart import *
from datetime import datetime, timedelta
from vnstock import * #import all functions
from tvDatafeed import TvDatafeed, Interval
st.set_page_config(layout="wide")

from module1 import nganhindex
st.header(':green[NG√ÄNH]üìàüìà')
df0 = nganhindex()
a =st.selectbox('Kho·∫£ng th·ªùi gian',['1 Ng√†y','1 Tu·∫ßn','1 Th√°ng','3 Th√°ng','6 Th√°ng','1 NƒÉm'])
if a =='1 Ng√†y':
    df00 = df0[['Ng√†nh','Thay ƒë·ªïi 1D']].sort_values(by="Thay ƒë·ªïi 1D")
    x = df00['Thay ƒë·ªïi 1D']
elif a =='1 Tu·∫ßn':
    df00 = df0[['Ng√†nh','Thay ƒë·ªïi 5D']].sort_values(by="Thay ƒë·ªïi 5D")
    x = df00['Thay ƒë·ªïi 5D']
elif a =='1 Th√°ng':
    df00 = df0.sort_values(by="Thay ƒë·ªïi 1M")
    x = df00['Thay ƒë·ªïi 1M']
elif a =='3 Th√°ng':
    df00 = df0.sort_values(by="Thay ƒë·ªïi 3M")
    x = df00['Thay ƒë·ªïi 3M']
elif a =='6 Th√°ng':
    df00 = df0.sort_values(by="Thay ƒë·ªïi 6M")
    x = df00['Thay ƒë·ªïi 6M']
elif a =='1 NƒÉm':
    df00 = df0.sort_values(by="Thay ƒë·ªïi 1Y")
    x = df00['Thay ƒë·ªïi 1Y']
fig = go.Figure(go.Bar(
            x=x,
            y=df00['Ng√†nh'],
            orientation='h',
            text=round(x,2).apply(lambda x:f'{x}%'),  # Th√™m gi√° tr·ªã text
            textposition='outside',
            marker=dict(
                color=x.apply(lambda x: 'green' if x > 0 else 'red'),
        # V·ªã tr√≠ vƒÉn b·∫£n b√™n trong thanh
)))
fig.update_layout(
    title='Di·ªÖn Bi·∫øn Ng√†nh '+ a,
    xaxis_title='Thay ƒë·ªïi',
    yaxis_title='Ng√†nh')

st.plotly_chart(fig,use_container_width=True)

#########################################



from module1 import topanhhuong
st.header(':green[T√ÅC ƒê·ªòNG TH·ªä TR∆Ø·ªúNG]')
exchange = st.selectbox('S·ªü GD',['HOSE','HNX','UPCOM',])
period =st.selectbox('Kho·∫£ng th·ªùi gian',['1d','1w','1M'])
df1= topanhhuong(exchange=exchange,industry='ALL',period=period)
fig1 = go.Figure()
df11= df1[['M√£ Gi·∫£m','ƒêi·ªÉm Gi·∫£m']]
a = round(df1['ƒêi·ªÉm TƒÉng'].sum(),2)
a= str(a)
b =str(round(df1['ƒêi·ªÉm Gi·∫£m'].sum(),2))
df11 =df11.sort_values(by="ƒêi·ªÉm Gi·∫£m", ascending=False).reset_index(drop=True)
fig1.add_trace(go.Bar(x=df1['M√£ TƒÉng'], y=df1['ƒêi·ªÉm TƒÉng'],name='T√≠ch c·ª±c '+a,text=df1['ƒêi·ªÉm TƒÉng'],textposition='outside',marker_color='grey'))
fig1.add_trace(go.Bar(x=df11['M√£ Gi·∫£m'], y=df11['ƒêi·ªÉm Gi·∫£m'],name='Ti√™u c·ª±c '+b,text=df11['ƒêi·ªÉm Gi·∫£m'],textposition='outside',marker_color='red'))
fig1.update_layout(title='T√°c ƒê·ªông ƒêi·ªÉm S·ªë '+exchange+"  "+ period, xaxis_title='Time')
##################################################
from module1 import  GTGD
df2 = GTGD(exchange=exchange)
fig2= go.Figure()
fig2.add_trace(go.Scatter(x=df2['time'],y=df2['GTGD H√¥m nay'],name='GTGD H√¥m nay',fill='tonexty',hovertemplate='<b>%{x}</b><br>%{y}',mode ='lines+text',fillcolor="red",line=dict(color='white')))
fig2.add_trace(go.Scatter(x=df2['time'],y=df2['GTGD TB5D'],name='GTGD TB 5 Ng√†y',fill='tozeroy',hovertemplate='<b>%{x}</b><br>%{y} ',mode ='lines+text',fillcolor="grey",line=dict(color='white')))
fig2.update_layout( xaxis_title='Th·ªùi gian',yaxis_title='GTGD', )
fig2.update_layout(title='GTGD Kh·ªõp L·ªánh Trong Ng√†y '+exchange+"  "+ period, xaxis_title='Time')

##############################################
from module1 import market_breadth
df3 = market_breadth(exchange =exchange,period=period,industry='ALL')

fig3 = go.Figure()

fig3.add_trace(go.Scatter(
    x=df3['time'], y=df3['M√£ TƒÉng'],name='M√£ TƒÉng',
    mode='lines',
    line=dict(width=0.5, color='rgb(184, 247, 212)'),fillcolor='green',
    stackgroup='one',
    groupnorm='percent', # sets the normalization for the sum of the stackgroup
    hoverinfo = 'text+x+y',
))


fig3.add_trace(go.Scatter(
    x=df3['time'], y=df3['M√£ ƒê·ª©ng'], name='M√£ ƒê·ª©ng',hoverinfo = 'text+x+y',
    mode='lines',
    line=dict(width=0.5, color='rgb(127, 166, 238)'),fillcolor='orange',
    stackgroup='one'))

fig3.add_trace(go.Scatter(
    x=df3['time'], y=df3['M√£ Gi·∫£m'],name='M√£ Gi·∫£m',
    mode='lines',
    line=dict(width=0.5, color='rgb(111, 231, 219)'),fillcolor='red',hoverinfo = 'text+x+y',
    stackgroup='one'
))

fig3.update_layout(
    title= 'Bi·∫øn ƒê·ªông Th·ªã Tr∆∞·ªùng '+exchange +"  "+ period ,
    showlegend=True,
    xaxis_type='category',
    yaxis=dict(
        type='linear',
        range=[1, 100],
        ticksuffix='%'))


###########################
from module1 import muaban
df4 = muaban(exchange=exchange,industry='ALL')

fig4 = go.Figure()

fig4.add_trace(go.Scatter(
    x=df4['time'], y=df4['d∆∞ mua'], name='D∆∞ b√°n',hoverinfo = 'text+x+y',
    mode='lines',
    line=dict(width=0.5, color='rgb(127, 166, 238)'),fillcolor='green',
    stackgroup='one'))



fig4.add_trace(go.Scatter(
    x=df4['time'], y=df4['d∆∞ b√°n'], name='D∆∞ b√°n',hoverinfo = 'text+x+y',
    mode='lines',
    line=dict(width=0.5, color='rgb(127, 166, 238)'),fillcolor='red',
    stackgroup='one'))

fig4.add_trace(go.Line(
    x=df4['time'], y=df4['d∆∞ mua TB5'],name='d∆∞ mua TB5 phi√™n',
    mode='lines',
    line=dict(width=2,color ='yellow'),fillcolor='white',hoverinfo = 'text+x+y',))
fig4.update_layout(
    title= 'D∆∞ Mua/B√°n Trong Ng√†y '+exchange,
    showlegend=True,
    xaxis_type='category',
    yaxis=dict(
        type='linear',
        range=[1, 100],
        ticksuffix='%'))


#######################################
from module1 import cungcau
df5 = cungcau(exchange=exchange,industry='ALL')
fig5= go.Figure()

fig5.add_trace(go.Scatter(
    x=df5['time'], y=df5['Mua Ch·ªß ƒê·ªông'], name='Mua Ch·ªß ƒê·ªông',hoverinfo = 'text+x+y',
    mode='lines',
    line=dict(width=0.5, color='rgb(127, 166, 238)'),fillcolor='green',
    stackgroup='one'))



fig5.add_trace(go.Scatter(
    x=df5['time'], y=df5['B√°n Ch·ªß ƒê·ªông'], name='B√°n Ch·ªß ƒê·ªông',hoverinfo = 'text+x+y',
    mode='lines',
    line=dict(width=0.5, color='rgb(127, 166, 238)'),fillcolor='red',
    stackgroup='one'))

fig5.add_trace(go.Line(
    x=df5['time'], y=df5['Mua Ch·ªß ƒê·ªông']/df5['B√°n Ch·ªß ƒê·ªông'],name='T·ª∑ l·ªá',
    mode='lines',
    line=dict(width=1.5,color ='yellow'),fillcolor='white',hoverinfo = 'text+x+y',
))
fig5.update_layout(title='Cung C·∫ßu Ch·ªß ƒê·ªông Trong Ng√†y '+exchange, xaxis_title='Time')
##########################################
from module1 import index
df6= index(exchange=exchange,industry='ALL',period=period)
import plotly.subplots as sp
import plotly.graph_objects as go
fig6 =go.Figure()
fig6 = sp.make_subplots(specs=[[{"secondary_y": True}]])
# Th√™m trace cho gi√° (line)
fig6.add_trace(go.Line(x=df6['time'], y=df6['index'], name='index',mode='lines',line=dict(color ='red',width=2)))
# Th√™m trace cho kh·ªëi l∆∞·ª£ng (c·ªôt)
fig6.add_trace(go.Bar(x=df6['time'], y=df6['volume'], name='Volume',marker=dict(color='grey')), secondary_y=True)
# C·∫≠p nh·∫≠t layout
fig6.update_layout(title='Ch·ªâ s·ªë '+exchange+"  "+period)
# C·∫≠p nh·∫≠t tr·ª•c y th·ª© nh·∫•t
fig6.update_yaxes(title_text='Index', secondary_y=False,showgrid=False)

my_con = st.container(border=True)
chart1,chart2= my_con.columns(2)
with chart1:
    st.plotly_chart(fig6, use_container_width=True)
with chart2:
    st.plotly_chart(fig1, use_container_width=True)

my_con = st.container(border=True)
chart3,chart4= my_con.columns(2)
with chart3:
    st.plotly_chart(fig2, use_container_width=True)
with chart4:
    st.plotly_chart(fig3, use_container_width=True)

my_con = st.container(border=True)
chart4,chart5= my_con.columns(2)
with chart4:
    st.plotly_chart(fig4, use_container_width=True)
with chart5:
    st.plotly_chart(fig5, use_container_width=True)

